kotlin version: 2.1.20
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/projects/appstorys/app/appstorys/src/main/java/com/appversal/appstorys/ui/xml/CsatView.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:107)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:90)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:54)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:27)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen$cli(KotlinToJVMBytecodeCompiler.kt:413)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:98)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:30)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:68)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:58)
	at org.jetbrains.kotlin.config.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:215)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:111)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:28)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.runPhasedPipeline(AbstractCliPipeline.kt:106)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.execute(AbstractCliPipeline.kt:65)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:61)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:36)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:80)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:337)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:466)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:75)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:514)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:431)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:310)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:137)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:678)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1805)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN CLASS_STATIC_INITIALIZER name:<clinit> visibility:public/*package*/ modality:FINAL <> () returnType:kotlin.Unit
  BLOCK_BODY
    SET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt visibility:public [final,static] declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt' type=kotlin.Unit origin=INITIALIZE_FIELD
      value: CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt' type=com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt origin=null
    SET_FIELD 'FIELD name:lambda$1825315143 type:kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit> visibility:private [static] declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt' type=kotlin.Unit origin=INITIALIZE_FIELD
      value: CALL 'public final fun composableLambdaInstance (key: kotlin.Int, tracked: kotlin.Boolean, block: kotlin.Any): androidx.compose.runtime.internal.ComposableLambda declared in androidx.compose.runtime.internal.ComposableLambdaKt' type=androidx.compose.runtime.internal.ComposableLambda origin=null
        key: CONST Int type=kotlin.Int value=1825315143
        tracked: CONST Boolean type=kotlin.Boolean value=false
        block: BLOCK type=com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided> origin=null
          CLASS LAMBDA_IMPL CLASS name:<no name provided> modality:FINAL visibility:public/*package*/ superTypes:[kotlin.Any; kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>]
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>
            CONSTRUCTOR GENERATED_MEMBER_IN_CALLABLE_REFERENCE visibility:public/*package*/ <> ($bottomPadding:androidx.compose.ui.unit.Dp) returnType:com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided> [primary]
              VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$bottomPadding index:0 type:androidx.compose.ui.unit.Dp
              BLOCK_BODY
                SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$bottomPadding type:androidx.compose.ui.unit.Dp visibility:public/*package*/ [final] declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE
                  receiver: GET_VAR '<this>: com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided> declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>' type=com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided> origin=null
                  value: GET_VAR '$bottomPadding: androidx.compose.ui.unit.Dp declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.<init>' type=androidx.compose.ui.unit.Dp origin=null
                DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
                BLOCK type=kotlin.Unit origin=null
            FUN name:invoke visibility:public modality:FINAL <> ($this:com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>, $composer:androidx.compose.runtime.Composer?, $changed:kotlin.Int) returnType:kotlin.Unit
              annotations:
                Composable
                ComposableTarget(applier = "androidx.compose.ui.UiComposable")
              overridden:
                public abstract fun invoke (p1: P1 of kotlin.Function2, p2: P2 of kotlin.Function2): R of kotlin.Function2 [operator] declared in kotlin.Function2
              $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>
              VALUE_PARAMETER name:$composer index:0 type:androidx.compose.runtime.Composer? [assignable]
              VALUE_PARAMETER name:$changed index:1 type:kotlin.Int
              BLOCK_BODY
                CALL 'public final fun sourceInformation (composer: androidx.compose.runtime.Composer, sourceInformation: kotlin.String): kotlin.Unit declared in androidx.compose.runtime.ComposerKt' type=kotlin.Unit origin=null
                  composer: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.invoke' type=androidx.compose.runtime.Composer? origin=null
                  sourceInformation: CONST String type=kotlin.String value="C31@994L81:CsatView.kt#l20wol"
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun OROR (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                      arg0: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                        $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                          arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                            $this: GET_VAR '$changed: kotlin.Int declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.invoke' type=kotlin.Int origin=null
                            other: CONST Int type=kotlin.Int value=3
                          arg1: CONST Int type=kotlin.Int value=2
                      arg1: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                        $this: CALL 'public abstract fun <get-skipping> (): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
                          $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.invoke' type=androidx.compose.runtime.Composer? origin=null
                    then: BLOCK type=kotlin.Unit origin=null
                      WHEN type=kotlin.Unit origin=IF
                        BRANCH
                          if: CALL 'public final fun isTraceInProgress (): kotlin.Boolean declared in androidx.compose.runtime.ComposerKt' type=kotlin.Boolean origin=null
                          then: CALL 'public final fun traceEventStart (key: kotlin.Int, dirty1: kotlin.Int, dirty2: kotlin.Int, info: kotlin.String): kotlin.Unit declared in androidx.compose.runtime.ComposerKt' type=kotlin.Unit origin=null
                            key: CONST Int type=kotlin.Int value=1825315143
                            dirty1: GET_VAR '$changed: kotlin.Int declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.invoke' type=kotlin.Int origin=null
                            dirty2: CONST Int type=kotlin.Int value=-1
                            info: CONST String type=kotlin.String value="com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.lambda$1825315143.<anonymous> (CsatView.kt:31)"
                      CALL 'public open fun CSAT-8Feqmps (bottomPadding: androidx.compose.ui.unit.Dp, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int): kotlin.Unit declared in com.appversal.appstorys.AppStorys' type=kotlin.Unit origin=null
                        $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:com.appversal.appstorys.AppStorys visibility:public [final,static] declared in com.appversal.appstorys.AppStorys' type=com.appversal.appstorys.AppStorys origin=null
                        bottomPadding: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$bottomPadding type:androidx.compose.ui.unit.Dp visibility:public/*package*/ [final] declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>' type=androidx.compose.ui.unit.Dp origin=null
                          receiver: GET_VAR '<this>: com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided> declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.invoke' type=com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided> origin=null
                        $composer: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.invoke' type=androidx.compose.runtime.Composer? origin=null
                        $changed: CONST Int type=kotlin.Int value=0
                      WHEN type=kotlin.Unit origin=IF
                        BRANCH
                          if: CALL 'public final fun isTraceInProgress (): kotlin.Boolean declared in androidx.compose.runtime.ComposerKt' type=kotlin.Boolean origin=null
                          then: CALL 'public final fun traceEventEnd (): kotlin.Unit declared in androidx.compose.runtime.ComposerKt' type=kotlin.Unit origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public abstract fun skipToGroupEnd (): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
                      $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.invoke' type=androidx.compose.runtime.Composer? origin=null
            FIELD FIELD_FOR_CAPTURED_VALUE name:$bottomPadding type:androidx.compose.ui.unit.Dp visibility:public/*package*/ [final]
            FUN BRIDGE name:invoke visibility:public modality:OPEN <> ($this:com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>, p1:kotlin.Any?, p2:kotlin.Any?) returnType:kotlin.Any?
              $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>
              VALUE_PARAMETER BRIDGE name:p1 index:0 type:kotlin.Any?
              VALUE_PARAMETER BRIDGE name:p2 index:1 type:kotlin.Any?
              EXPRESSION_BODY
                RETURN type=kotlin.Nothing from='public open fun invoke (p1: kotlin.Any?, p2: kotlin.Any?): kotlin.Any? declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>'
                  CALL 'public final fun invoke ($composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int): kotlin.Unit declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>' type=kotlin.Unit origin=BRIDGE_DELEGATION
                    $this: GET_VAR '<this>: com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided> declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.invoke' type=com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided> origin=null
                    $composer: TYPE_OP type=androidx.compose.runtime.Composer origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.Composer
                      GET_VAR 'p1: kotlin.Any? declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.invoke' type=kotlin.Any? origin=null
                    $changed: TYPE_OP type=kotlin.Int origin=IMPLICIT_CAST typeOperand=kotlin.Int
                      GET_VAR 'p2: kotlin.Any? declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>.invoke' type=kotlin.Any? origin=null
          CONSTRUCTOR_CALL 'public/*package*/ constructor <init> ($bottomPadding: androidx.compose.ui.unit.Dp) [primary] declared in com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided>' type=com.appversal.appstorys.ui.xml.ComposableSingletons$CsatViewKt.<clinit>.<no name provided> origin=null
            $bottomPadding: GET_VAR 'var bottomPadding: androidx.compose.ui.unit.Dp [var] declared in com.appversal.appstorys.ui.xml.CsatView' type=androidx.compose.ui.unit.Dp origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:405)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:422)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:171)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateFile$lambda$18(JvmIrCodegenFactory.kt:398)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:68)
	at org.jetbrains.kotlin.config.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:215)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:111)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:51)
	... 45 more
Caused by: java.lang.IllegalStateException: No mapping for symbol: VAR name:bottomPadding type:androidx.compose.ui.unit.Dp [var]
	at org.jetbrains.kotlin.backend.jvm.codegen.IrFrameMap.typeOf(irCodegenUtils.kt:57)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitGetValue(ExpressionCodegen.kt:755)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitGetValue(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrGetValue.accept(IrGetValue.kt:18)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.gen(ExpressionCodegen.kt:214)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generateConstructorArguments(ExpressionCodegen.kt:712)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitConstructorCall(ExpressionCodegen.kt:700)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitConstructorCall(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrConstructorCall.accept(IrConstructorCall.kt:27)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:520)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:534)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitBlock(IrElementVisitor.kt:136)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrBlock.accept(IrBlock.kt:18)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.gen(ExpressionCodegen.kt:214)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrCallGenerator.genValueAndPut(IrCallGenerator.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:557)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:585)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:833)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitSetField(IrElementVisitor.kt:226)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:863)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrSetField.accept(IrSetField.kt:21)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:520)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:525)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:237)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 54 more


